/*
 * Sample API
 *
 * Test de OpenApi
 *
 * API version: 0.1.9
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	page := "<h1>My very small API</h1>" +  
			"<p>Index -- <a>http://localhost:8080/</a></p>" +
			"<p>Acces to every data :</p>"+
			"<p>Companys -- <a href=http://localhost:8080/companys>Companys</a></p>" +
			"<p>Acces to one data :</p>"+
			"<p>Company -- <a href=http://localhost:8080/company/1>Company</a></p>" +
			"<p>Add a predifine data :</p>"+
			"<p>CompanyCreate -- <a href=http://localhost:8080/companyCreate>CompanyCreate</a></p>"

	fmt.Fprintf(w, page)
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"CompanyIdGet",
		strings.ToUpper("Get"),
		"/company/{id}",
		CompanyIdGet,
	},

	Route{
		"CompanyCreatePost",
		strings.ToUpper("Get"),
		"/companyCreate",
		CompanyCreatePost,
	},

	Route{
		"CompanysGet",
		strings.ToUpper("Get"),
		"/companys",
		CompanysGet,
	},

	Route{
		"CompanyNameGet",
		strings.ToUpper("Get"),
		"/company/name/{name}",
		CompanyNameGet,
	},
}
